\
.\" This man page was generated by the Netpbm tool 'makeman' from HTML source.
.\" Do not hand-hack it!  If you have bug fixes or improvements, please find
.\" the corresponding HTML page on the Netpbm website, generate a patch
.\" against that, and send it to the Netpbm maintainer.
.TH "Pamtotga User Manual" 0 "06 November 2018" "netpbm documentation"

.SH NAME

pamtotga - convert a Netpbm image to a TrueVision Targa file

.UN synopsis
.SH SYNOPSIS

\fBpamtotga\fP
[\fB-mono|-cmap|-cmap16|-rgb\fP]
[\fB-norle\fP]
[\fB-name=\fP\fIname\fP
[\fB-verhose\fP]
[\fIpamfile\fP]
.PP
All options can be abbreviated to their shortest unique prefix.  You
may use two hyphens instead of one to designate an option.  You may
use either white space or equals signs between an option name and its
value.

.UN description
.SH DESCRIPTION
.PP
This program is part of
.BR "Netpbm" (1)\c
\&.
.PP
\fBpamtotga\fP reads a PBM, PGM, PPM, or PAM image as input and
produces a TrueVision Targa file as output.  The PAM image may be
either a BLACKANDWHITE, GRAYSCALE, RGB, or RGB_ALPHA image.
.PP
To create a TGA image with transparency (i.e. with a transparency mask),
use RGB_ALPHA PAM input.  Some Netpbm programs that generate images with
transparency masks generate them in that format.  For another way to create
the proper input stream, see
.BR "\fBpamstack\fP" (1)\c
\&.
.PP
It is unclear that anything except \fBpamtotga\fP knows about TGAs
with transparency.  The history behind this feature of \fBpamtotga\fP
is not clear.  The format \fBpamtotga\fP produces is simply the same
as an ordinary RGB TGA image except with a 4th plane added for
transparency.  The PixelSize field of the TGA header specifies 32 bits
instead of 24 and the raster has an extra byte added to each pixel, at
the tail end.  The value of that byte has the same meaning as in a PAM
image with maxval 255.

.UN options
.SH OPTIONS


.TP
\fB-cmap\fP
Make output Targa file use a color map (palette) to make the output smaller.
.sp
Each color in the color map is 3 bytes, 8 bits each of red, green, and blue,
unless the input is black and white or grayscale, in which case each color in
the palette is represented by one byte.
.sp
Input must contain no more than 256 distinct colors and must not contain
transparency information.
.sp
(The transparency limitation is not a limitation of the format, but
of \fBpamtotga\fP.  Implementing a color map that contains transparency
information is harder to implement).

.TP
\fB-cmap16\fP
Same as \fB-cmap\fP, except a color map entry for full color input is 5
bits each of red, green, and blue, stored as two bytes (16 bits).
.sp
Restrictions are the same as for \fB-cmap\fP.
.sp
This option was new in Netpbm 10.85 (December 2018).
    
.TP
\fB-mono\fP
Make output Targa file of type 8 bit monochrome.  Input must be PBM or PGM
or a PAM with BLACKANDWHITE or GRAYSCALE tuple type.
See \fB-cmap\fP.
.sp
You may specify at most one of \fB-mono\fP, \fB-cmap\fP, and
\fB-rgb\fP.  If you specify neither, the default image type is the
most highly constrained compatible type is used, where monochrome is
more constrained than colormapped which is in turn more constrained
than unmapped.

.TP
\fB-rgb\fP
Make output Targa file of type 24 bit unmapped color.  See \fB-cmap\fP.

.TP
\fB-norle\fP
Do not use run-length encoding in the output Targa file.
Run-length encoded files are smaller, but Some Targa readers can't
read run-length encoded files.

.TP
\fB-name=\fP\fIname\fP
This is the value for the image ID stated in the header of the TGA
output file.  \fBpamtotga\fP truncates it as necessary to meet TGA
standards.
.sp
By default, \fBpamtotga\fP uses the input file name argument, up to
the first period (or the whole thing if there is no period).  It truncates
it as necessary to meet TGA standards.  If you specify (or default to)
Standard Input, \fBpamtotga\fP omits the image ID from the TGA header.

.TP
\fB-verbose\fP
This causes \fBpamtotga\fP to issues messages about the conversion
process.

      


.UN seealso
.SH SEE ALSO
.BR "tgatoppm" (1)\c
\&,
.BR "pnmquant" (1)\c
\&,
.BR "pamstack" (1)\c
\&,
.BR "pam" (5)\c
\&
.BR "pnm" (5)\c
\&

.UN history
.SH HISTORY
.PP
This program was called \fBppmtotga\fP until Netpbm 10.6 (July 2002).
That was always a misnomer, though, because a PPM class program would not be
able to tell the difference between PGM and PPM input (it would all look like
PPM), and thus could not choose the output Targa image type based on the type
of the input.  Netpbm 10.6 also added the ability to handle a transparency
channel, so it became a PAM class program.
.PP
In Netpbm 10.15 (April 2003), the program became the first in the
Netpbm package to recognize a transparency channel in a PAM.  It recognized
tuple type "RGBA".  But when this kind of PAM image was later
added to the PAM specification, it was specified with tuple type
"RGB_ALPHA".  So in Netpbm 10.26 (January 2005), \fBpamtotga\fP
changed to recognize "RGB_ALPHA" instead of "RGBA".

.UN author
.SH AUTHOR

Copyright (C) 1989, 1991 by Mark Shand and Jef Poskanzer.
.SH DOCUMENT SOURCE
This manual page was generated by the Netpbm tool 'makeman' from HTML
source.  The master documentation is at
.IP
.B http://netpbm.sourceforge.net/doc/pamtotga.html
.PP